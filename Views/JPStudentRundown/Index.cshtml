@model IEnumerable<JobPlacementDashboard.ViewModels.JPStudentRundown>

@{
    ViewBag.Title = "Index";
}

<h3>&nbsp;&nbsp;Active JP Students</h3>
<p><br /></p>

@using (Html.BeginForm())
{
    <p>
        <div id="RundownSearchContainer", style="width:900px; margin:0 auto;">
            <div class="row">
                <div class="col-md-4">
                    <div id="custom-search-input">
                        <div class="input-group ">
                            <input type="search" name="SearchString" class="form-control input-lg" id="searchStyle" placeholder="Find by name or location" />
                            <span class="input-group-btn ActiveStudentButtons">
                                <button type="submit" class="btn btn-info btn-md">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md">    
                        @Html.ActionLink("Ready To Graduate", "Index", Model, new { sortOrder = ViewBag.GraduateSortParm, @class = "btn btn-primary", @id = "btnsize" })
                    
                    
                        @Html.ActionLink("No Activity", "Index", Model, new { sortOrder = ViewBag.NoActivity, @class = "btn btn-primary", @id = "btnsize" })
                    
                    
                        @Html.ActionLink("Reset", "Index", Model, new { @class = "btn btn-primary", @id = "btnsize" })
                        @*@Html.ActionLink("Reset", "Networking", Model, new { @class = "btn btn-primary", @id = "btnsize" })*@
                </div>
            </div>
        </div>
    </p>
}

<div class="container">
    <div class="col-sm-12">
        <table class="table">
            <tr>
                <th class="text-center">
                    @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.StudentEmail)
                </th>
                <th id="head-link" class="text-center">
                    @Html.ActionLink("Location", "Index", new { sortOrder = ViewBag.LocationSortParm })
                </th>
                <th id="head-link" class="text-center">
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.DateSortParm }) ">Days<br />Active</a>
                </th>
                <th id="head-link" class="text-center">
                    @Html.DisplayNameFor(model => model.StudentLinkedIn)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.StudentPortfolio)
                </th>
                <th id="head-link" class="text-center">
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.TotalSortParm })">Total<br />Apps</a>
                </th>
                <th id="head-link" class="text-center">
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.WeeklySortParm })">Apps<br />This Week</a>
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.JPGraduated)
                </th>
                <th style="width:50px" class="text-center">
                    @Html.DisplayNameFor(model => model.CheckListStatus)
                </th>

                <th id="head-link" class="text-center">
                    <a href="@Url.Action("Index", new { sortOrder = ViewBag.LatestContactSortParm})">Last <br /> Contact</a>
                </th>
            </tr>
            @{string emailList = string.Empty; }
            @foreach (var item in Model)
            {

                string trStyle = null;
                if (item.JPGraduated)
                {
                    trStyle = "background-color: #c1c8dd;";
                }

                <tr class="text-center" style="@trStyle">
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.StudentName)
                    </td>
                    <td class="text-center">

                        @{string emailString = item.StudentEmail;} <!-- declaring empty email string -->
                        <a href="mailto:@Html.ExternalLink(item.StudentEmail)" target="_blank" class="emailLink" id="@item.JPStudentId">@emailString</a>
                        <span id="emailList">@{emailList += emailString + ",";}</span> <!-- concatenating emailString with next emailString to generate a list that will be passed to controller for export to CSV-->
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.StudentLocation)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.StudentDayCount)
                    </td>
                    <td class="text-center">
                        <a href="http://@Html.ExternalLink(item.StudentLinkedIn)" target="_blank">LinkedIn</a>
                    </td>
                    <td class="text-center">
                        <a href="http://@Html.ExternalLink(item.StudentPortfolio)" target="_blank">Portfolio</a>
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.TotalApplications)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.TotalApplicationsThisWeek)
                    </td>
                    <td class="text-center">
                        @item.JPGraduated
                    </td>
                    <td class="text-center">
                        @item.CheckListStatus
                    </td>
                    @if (@item.CalculateLastContactDate == 0)
                    {
                        <td class="text-center">
                            Today
                        </td>
                    }
                    else if (item.CalculateLastContactDate == 1)
                    {
                        <td class="text-center">
                            @item.CalculateLastContactDate Day Ago
                        </td>
                    }
                    else
                    {
                        <td class="text-center">
                            @item.CalculateLastContactDate Days Ago
                        </td>
                    }
                    <td class="text-center">
                        @Html.ActionLink("Edit", "Edit", new { id = item.JPStudentId })
                    </td>
                </tr>

            }
        </table>
            <div style="margin-left: 50px">
                 @Html.ActionLink("Export Student Email Addresses", "ExportCSV", new { emailList = emailList }, new { @class = "btn btn-primary" })
             </div>
        <br />
    </div>
</div>



<div id="loader"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(".emailLink").on("click", function () {
            var jpid = this.id;
            location.href = "/JPStudentRundown/Index?latestContact=" + jpid;
        });

    </script>
}
